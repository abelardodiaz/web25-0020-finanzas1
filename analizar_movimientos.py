#!/usr/bin/env python
"""
Script para analizar movimientos BBVA y entender la l√≥gica contable correcta
"""
import pandas as pd
import sys
from decimal import Decimal
# from tabulate import tabulate  # No necesario por ahora

def analizar_archivo_bbva(archivo_path):
    """Analiza un archivo de movimientos BBVA"""
    print(f"\n{'='*80}")
    print(f"üìä ANALIZANDO: {archivo_path}")
    print('='*80)
    
    # Leer el archivo Excel
    df = pd.read_excel(archivo_path, header=None)
    
    # Buscar donde empiezan los datos reales
    inicio_datos = None
    for idx, row in df.iterrows():
        if row.astype(str).str.contains('FECHA', case=False).any():
            inicio_datos = idx
            columnas = df.iloc[idx].tolist()
            break
    
    if inicio_datos is None:
        print("‚ùå No se encontr√≥ la fila de encabezados")
        return
    
    # Crear DataFrame con los datos reales
    df_movimientos = df.iloc[inicio_datos+1:].reset_index(drop=True)
    
    # Usar las primeras 5 columnas y renombrarlas
    df_movimientos = df_movimientos.iloc[:, :5]
    df_movimientos.columns = ['FECHA', 'DESCRIPCION', 'CARGO', 'ABONO', 'SALDO']
    
    # Limpiar datos
    df_movimientos = df_movimientos.dropna(how='all')
    df_movimientos = df_movimientos[df_movimientos['FECHA'].notna()]
    
    # Convertir montos a n√∫meros
    df_movimientos['CARGO'] = pd.to_numeric(df_movimientos['CARGO'], errors='coerce').fillna(0)
    df_movimientos['ABONO'] = pd.to_numeric(df_movimientos['ABONO'], errors='coerce').fillna(0)
    df_movimientos['SALDO'] = pd.to_numeric(df_movimientos['SALDO'], errors='coerce').fillna(0)
    
    print(f"\nüìà Total de movimientos: {len(df_movimientos)}")
    print(f"üìÖ Per√≠odo: {df_movimientos['FECHA'].min()} a {df_movimientos['FECHA'].max()}")
    
    # Mostrar primeros 10 movimientos
    print("\nüîç PRIMEROS 10 MOVIMIENTOS:")
    print("="*80)
    
    for idx, row in df_movimientos.head(10).iterrows():
        fecha = row['FECHA']
        desc = row['DESCRIPCION'][:50]
        cargo = row['CARGO']
        abono = row['ABONO']
        saldo = row['SALDO']
        
        print(f"\nüìå Movimiento {idx+1}:")
        print(f"   Fecha: {fecha}")
        print(f"   Descripci√≥n: {desc}")
        
        if cargo > 0:
            print(f"   üí∏ CARGO: ${cargo:,.2f} (Sale dinero de BBVA)")
            print(f"   üìä Contablemente:")
            print(f"      - BBVA (DEUDORA): ABONO por ${cargo:,.2f} ‚Üí Disminuye")
            print(f"      - Cuenta destino: CARGO por ${cargo:,.2f} ‚Üí Aumenta")
        elif abono > 0:
            print(f"   üí∞ ABONO: ${abono:,.2f} (Entra dinero a BBVA)")
            print(f"   üìä Contablemente:")
            print(f"      - BBVA (DEUDORA): CARGO por ${abono:,.2f} ‚Üí Aumenta")
            print(f"      - Cuenta origen: ABONO por ${abono:,.2f} ‚Üí Disminuye/Aumenta")
        
        print(f"   üíº Saldo despu√©s: ${saldo:,.2f}")
        print("-"*40)
    
    # Resumen estad√≠stico
    print("\nüìä RESUMEN ESTAD√çSTICO:")
    print("="*80)
    total_cargos = df_movimientos['CARGO'].sum()
    total_abonos = df_movimientos['ABONO'].sum()
    num_cargos = (df_movimientos['CARGO'] > 0).sum()
    num_abonos = (df_movimientos['ABONO'] > 0).sum()
    
    print(f"üí∏ Total CARGOS: ${total_cargos:,.2f} ({num_cargos} transacciones)")
    print(f"üí∞ Total ABONOS: ${total_abonos:,.2f} ({num_abonos} transacciones)")
    print(f"üìà Flujo neto: ${total_abonos - total_cargos:,.2f}")
    
    return df_movimientos

def explicar_logica_contable():
    """Explica la l√≥gica contable correcta"""
    print("\n" + "="*80)
    print("üìö L√ìGICA CONTABLE CORRECTA SEG√öN registros_contables.md")
    print("="*80)
    
    print("""
üè¶ CUENTA BBVA 5019 (Tipo: D√âBITO, Naturaleza: DEUDORA)
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Cuando en el estado de cuenta BBVA aparece:

1Ô∏è‚É£ CARGO (Sale dinero de BBVA):
   ‚Ä¢ En BBVA: Es un ABONO contable ‚Üí Disminuye el saldo
   ‚Ä¢ Ejemplo: Pago de Netflix $200
     ‚îú‚îÄ BBVA (DEUDORA): ABONO $200 (disminuye)
     ‚îî‚îÄ Gasto Netflix (DEUDORA): CARGO $200 (aumenta)

2Ô∏è‚É£ ABONO (Entra dinero a BBVA):
   ‚Ä¢ En BBVA: Es un CARGO contable ‚Üí Aumenta el saldo
   ‚Ä¢ Ejemplo: Dep√≥sito de n√≥mina $10,000
     ‚îú‚îÄ BBVA (DEUDORA): CARGO $10,000 (aumenta)
     ‚îî‚îÄ Ingreso N√≥mina (ACREEDORA): ABONO $10,000 (aumenta)

‚ö†Ô∏è IMPORTANTE: La terminolog√≠a del banco es INVERSA a la contable:
   ‚Ä¢ Banco dice "CARGO" = Contablemente es ABONO para nosotros
   ‚Ä¢ Banco dice "ABONO" = Contablemente es CARGO para nosotros
""")

if __name__ == "__main__":
    # Explicar la l√≥gica primero
    explicar_logica_contable()
    
    # Analizar el archivo m√°s peque√±o primero
    archivo = "movimientos (1).xlsx"
    if len(sys.argv) > 1:
        archivo = sys.argv[1]
    
    df = analizar_archivo_bbva(archivo)
    
    print("\n" + "="*80)
    print("‚úÖ AN√ÅLISIS COMPLETADO")
    print("="*80)
    print("\nüéØ Ahora podemos revisar cada movimiento y verificar si el sistema")
    print("   los est√° procesando correctamente seg√∫n los principios contables.")